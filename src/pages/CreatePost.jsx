import React from "react";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { preview } from "../assets";
import { getRandomPrompt } from "../utils";
import { FormField, Loader } from "../components";
// import { set } from 'mongoose'

const CreatePost = () => {
  const navigate = useNavigate();

  const [form, setForm] = useState({
    name: "",
    prompt: "",
    photo: "",
  });

  const [generatingImage, setGeneratingImage] = useState(false);
  const [loading, setLoading] = useState(false);

  // Handle form input changes

  const handleChange = (event) => {
    setForm({ ...form, [event.target.name]: event.target.value });
  };

  const handleSurpriseMe = () => {
    const randomPropmt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPropmt });
  };

  // Generate an image using the DALL-E API

  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImage(true);
        const response = await fetch("http://localhost:8080/api/v1/dalle", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            prompt: form.prompt,
          }),
        });

        const data = await response.json();
        setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
      } catch (error) {
        alert(error);
        console.log(error);
      } finally {
        setGeneratingImage(false);
      }
    } else {
      alert("Please provide proper prompt");
    }
  };

  // Handle form submission

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (form.prompt && form.photo) {
      setLoading(true);

      try {
        const response = await fetch("http://localhost:8080/api/v1/posts", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(form),
        });

        if (!response.ok) {
          throw new Error("Network response was not ok.");
        }

        const contentType = response.headers.get("content-type");
        if (!contentType || !contentType.includes("application/json")) {
          throw new Error("Received non-JSON response from server.");
        }

        await response.json();
        alert("Post created successfully");
        navigate("/");
      } catch (error) {
        alert(error);
        console.log(error);
      } finally {
        setLoading(false);
      }
    } else {
      alert("Please provide a prompt and generate an image");
    }
  };

  // Handle the Surprise Me button  

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="flex justify-center items-center font-extrabold text-[#222328] text-[32px]">
          Create
        </h1>
        <p className="flex justify-center items-center mt-2 text-[#666e75] text-[16px] max-w [500px]">
          Create imaginative and visually stunning images generated by DALL-E AI
          and share them with the Community
        </p>
      </div>

      <div className="flex justify-center items-center mb-20">
        <form className="mt-16 max-w-3xl" onSubmit={handleSubmit}>
          <div className="flex flex-col gap-5">
            <FormField
              labelName="Name"
              type="text"
              name="name"
              placeholder="Enter your name"
              value={form.name}
              handleChange={handleChange}
            />

            <FormField
              labelName="Prompt"
              type="text"
              name="prompt"
              placeholder="Enter a prompt"
              value={form.prompt}
              handleSurpriseMe={handleSurpriseMe}
            />
          </div>

          <div className="mt-6">
            <button
              type="button"
              className="text-white bg-black font-medium rounded-md text-sm w-full sm:auto px-5 py-2.5 text-center"
              onClick={() => setForm({ ...form, prompt: getRandomPrompt() })}
            >
              Generate Prompt
            </button>
          </div>

          <div className="mt-10 flex justify-center">
            <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">
              {form.photo ? (
                <img
                  src={form.photo}
                  alt={form.prompt}
                  className="w-full h-full object-contain"
                />
              ) : (
                <img
                  src={preview}
                  alt="preview"
                  className="w-9/12 h-9/12 object-contain opacity-40"
                />
              )}

              {generatingImage && (
                <div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg">
                  <Loader />
                </div>
              )}
            </div>
          </div>

          <div className="mt-5 flex gap-5">
            <button
              type="button"
              onClick={generateImage}
              className="text-white bg-black font-medium rounded-md text-sm w-full sm:auto px-5 py-2.5 text-center"
            >
              {generatingImage ? "Generating..." : "Generate Image"}
            </button>
          </div>

          <div className="mt-10">
            <p className="mt-2 text-[#666e75] text-[14px]">
              Once you have created the image you want, you can share it with
              others in the community
            </p>
            <button
              type="submit"
              className="mt-3 text-white bg-black font-medium rounded-md text-sm w-full sm:auto px-5 py-2.5 text-center"
            >
              {loading ? "Sharing..." : "Share with the community"}
            </button>
          </div>
        </form>
      </div>
    </section>
  );
};

export default CreatePost;
